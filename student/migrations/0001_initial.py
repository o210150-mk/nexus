# Generated by Django 5.1.6 on 2025-08-22 12:45

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('gmail', models.EmailField(max_length=254, unique=True)),
                ('id_no', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('class_year', models.IntegerField(default=0)),
                ('branch', models.CharField(blank=True, choices=[('CSE', 'Computer Science and Engineering'), ('ECE', 'Electronics and Communication Engineering'), ('EEE', 'Electrical and Electronics Engineering'), ('MECH', 'Mechanical Engineering'), ('CIVIL', 'Civil Engineering')], max_length=5)),
                ('father_name', models.CharField(blank=True, max_length=100)),
                ('mother_name', models.CharField(blank=True, max_length=100)),
                ('hall_ticket_no', models.CharField(max_length=20, unique=True)),
                ('address', models.TextField(blank=True)),
                ('phone_number', models.CharField(max_length=10)),
                ('parent_phone_number', models.CharField(blank=True, max_length=10)),
                ('guardian', models.BooleanField(default=False)),
                ('hostel_name', models.CharField(blank=True, max_length=100)),
                ('room_no', models.CharField(blank=True, max_length=10)),
                ('blood_group', models.CharField(blank=True, max_length=5)),
                ('year', models.IntegerField()),
                ('date_of_birth', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('default_password', models.CharField(blank=True, help_text='The initial default password for the user. This value should not change.', max_length=128, null=True)),
                ('role', models.CharField(choices=[('STUDENT', 'Student'), ('FACULTY', 'Faculty'), ('HOD', 'HOD'), ('AO', 'AO'), ('DEAN', 'Dean'), ('DSW', 'DSW'), ('DIRECTOR', 'Director')], default='Student', max_length=10, verbose_name='user role')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
    ]
